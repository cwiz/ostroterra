(function() {
  var csv, fs, should;
  fs = require('fs');
  should = require('should');
  csv = require('..');
  describe('escape', function() {
    it('Test default', function() {
      return csv().fromPath("" + __dirname + "/escape/default.in", {
        escape: '"'
      }).toPath("" + __dirname + "/escape/default.tmp").on('data', function(data, index) {
        if (index === 0) {
          data[1].should.eql('19"79.0');
          return data[3].should.eql('A"B"C');
        }
      }).on('end', function() {
        var expect, result;
        result = fs.readFileSync("" + __dirname + "/escape/default.out").toString();
        expect = fs.readFileSync("" + __dirname + "/escape/default.tmp").toString();
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/escape/default.tmp");
      });
    });
    return it('Test backslash', function() {
      return csv().fromPath("" + __dirname + "/escape/backslash.in", {
        escape: '\\'
      }).toPath("" + __dirname + "/escape/backslash.tmp").on('data', function(data, index) {
        if (index === 0) {
          data[1].should.eql('19"79.0');
          return data[3].should.eql('A"B"C');
        }
      }).on('end', function(count) {
        var expect, result;
        count.should.eql(2);
        expect = fs.readFileSync("" + __dirname + "/escape/backslash.out").toString();
        result = fs.readFileSync("" + __dirname + "/escape/backslash.tmp").toString();
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/escape/backslash.tmp");
      });
    });
  });
}).call(this);
