(function() {
  var csv, fs, should;
  fs = require('fs');
  should = require('should');
  csv = require('..');
  describe('buffer', function() {
    it('Buffer smaller than in', function() {
      return csv().fromPath("" + __dirname + "/buffer/smaller.in", {
        bufferSize: 1024
      }).toPath("" + __dirname + "/buffer/smaller.tmp").transform(function(data) {
        data.should.be.a('object');
        return data;
      }).on('end', function() {
        var expect, result;
        expect = fs.readFileSync("" + __dirname + "/buffer/smaller.out").toString();
        result = fs.readFileSync("" + __dirname + "/buffer/smaller.tmp").toString();
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/buffer/smaller.tmp");
      });
    });
    return it('Buffer same as in', function() {
      return csv().fromPath("" + __dirname + "/buffer/same.in", {
        bufferSize: 1024
      }).toPath("" + __dirname + "/buffer/same.tmp").transform(function(data) {
        data.should.be.a('object');
        return data;
      }).on('end', function() {
        var expect, result;
        expect = fs.readFileSync("" + __dirname + "/buffer/same.out").toString();
        result = fs.readFileSync("" + __dirname + "/buffer/same.tmp").toString();
        result.should.eql(expect);
        return fs.unlink("" + __dirname + "/buffer/same.tmp");
      });
    });
  });
}).call(this);
